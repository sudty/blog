<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.BlogDao">

    <resultMap id="blog" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="updateTime" column="update_time"/>
        <result property="typeId" column="type_id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="description" column="description"/>
        <result property="createTime" column="create_time"/>
        <result property="typeId" column="type_id"/>
        <result property="tagIds" column="tag_ids"/>
        <association property="type" javaType="Type">
            <id property="id" column="typeid"/>
            <result property="name" column="typename"/>
        </association>
        <collection property="tags" ofType="Tag">
            <id property="id" column="tagid"/>
            <result property="name" column="tagname"/>
        </collection>
    </resultMap>

    <delete id="deleteBlog">
        delete from t_blog where id = #{id}
    </delete>

    <select id="getIndexBlog" resultMap="blog">  /*主页博客展示*/
        select b.id, b.title, b.first_picture, b.update_time, b.description,
        t.name typename, t.id typeid
        from t_blog b, t_type t
        where b.type_id = t.id  order by b.update_time desc
    </select>

    <select id="getAllBlog" resultMap="blog">  /*后台博客展示*/
        select b.id, b.title, b.update_time, b.type_id,
               t.id typeid, t.name typename
        from t_blog b, t_type t
        where b.type_id = t.id    /*博客类型id=类型id*/
    </select>

    <select id="getByTypeId" resultMap="blog">
        select b.id, b.title, b.first_picture,b.update_time, b.description,
        t.name typename, t.id typeid
        from t_blog b, t_type t
        where b.type_id = t.id and b.type_id = #{typeId} order by b.update_time desc
    </select>

    <select id="getByTagId" resultMap="blog">
        select b.id, b.title, b.first_picture,b.update_time, b.description,
        t.name typename, t.id typeid,
        t1.name tagname, t1.id tagid
        from t_blog b, t_type t, t_blog_tags tb, t_tag t1
        where b.type_id = t.id  and tb.blog_id = b.id and tb.tag_id = t1.id and t1.id = #{tagId}
        order by b.update_time desc
    </select>

    <select id="getBlog" resultMap="blog"> /*后台展示博客*/
        select b.id,b.flag, b.title, b.content, b.type_id,
         b.tag_ids, b.first_picture, b.description
        from t_blog b  where  b.id = #{id};
    </select>

    <select id="getDetailedBlog" resultMap="blog">  /*博客详情*/
        select b.id, b.first_picture, b.flag, b.title, b.content,
        b.update_time,
        tag.id tagid, tag.name tagname
        from t_blog b,  t_tag tag, t_blog_tags tb
        where tb.blog_id = b.id and tb.tag_id = tag.id and  b.id = #{id}
    </select>

    <select id="getSearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id, b.title, b.first_picture,b.update_time, b.description,
        t.name typename
        from t_blog b, t_type t
        where b.type_id = t.id and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>

    <select id="searchAllBlog" parameterType="Blog" resultMap="blog">
        <bind name="pattern" value="'%' + title + '%'" />    /*模糊查询*/
        select b.id, b.title, b.update_time, b.type_id, t.id, t.name
        from t_blog b ,t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id    /*博客类型id=类型id*/
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}       /*根据博客类型查询*/
            </if>
            <if test="title != null">
                and b.title like #{pattern}   /*根据博客title模糊查询*/
            </if>
        </where>
    </select>

    <update id="updateBlog" parameterType="Blog">
        update t_blog set flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId}, tag_ids = #{tagIds},
        first_picture = #{firstPicture} , description = #{description},
        update_time = #{updateTime} where id = #{id};
    </update>

    <!--useGeneratedKeys="true"；使用自增主键获取主键值策略
        keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
    -->
    <insert id="saveBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog (title, content, first_picture, flag,
        create_time, update_time, type_id, tag_ids, description)
        values (#{title}, #{content}, #{firstPicture}, #{flag}, #{createTime},
        #{updateTime}, #{typeId}, #{tagIds},  #{description});
    </insert>

    <insert id="saveBlogAndTag" parameterType="BlogAndTag">
        insert into t_blog_tags (tag_id, blog_id) values (#{tagId},#{blogId});
    </insert>


    <select id="findGroupYear" resultType="String">
        select DATE_FORMAT(b.update_time, '%Y') from t_blog b order by b.update_time desc
    </select>

    <select id="findByYear" resultMap="blog">
        select b.title, b.update_time, b.id, b.flag
        from t_blog b
        where DATE_FORMAT(b.update_time, "%Y") = #{year}
    </select>








</mapper>